services:
  netdata:
    image: netdata/netdata:v1.47.2
    container_name: netdata
    hostname: netdata
    pid: host
    network_mode: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /:/host/root:ro,rslave
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /run/dbus:/run/dbus:ro
    environment:
      - NETDATA_CLAIM_TOKEN=$NETDATA_CLAIM_TOKEN
      - NETDATA_CLAIM_ROOMS=$NETDATA_CLAIM_ROOMS
      - DISABLE_TELEMETRY=1
    ports:
      - "19999:19999"

  elasticsearch:
    image: elasticsearch:8.15.2
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=basic
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - minerva
    deploy:
      resources:
        limits:
          memory: 8G

  index-creator:
    image: curlimages/curl:8.10.1
    container_name: index-creator
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: [ "sh", "-c", "curl -X PUT 'http://elasticsearch:9200/minerva'" ]
    networks:
      - minerva

  kibana:
    image: kibana:8.15.2
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - minerva
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]

networks:
  minerva:
    name: minerva
    driver: bridge

volumes:
  netdataconfig:
    name: netdataconfig
  netdatalib:
    name: netdatalib
  netdatacache:
    name: netdatacache
