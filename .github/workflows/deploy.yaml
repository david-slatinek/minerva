name: Deploy API

on:
  push:
    tags: [ "v[0-9].[0-9].[0-9]" ]

jobs:
  build:
    name: Build standalone artefact
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Build
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.1"
          cache-dependency-path: api/go.sum
      - run: |
          go mod download -x
          go build -v main.go

  push:
    name: Push to ECR
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: api

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "eu-central-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: minerva
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
        run: |
          echo "mode: release" >> config/config.docker.yaml
          
          docker build -t $REGISTRY/$REPOSITORY:latest --build-arg FILE=config.docker .
          docker image tag $REGISTRY/$REPOSITORY:latest $REGISTRY/$REPOSITORY:${{ github.ref_name }}
          
          docker push $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:${{ github.ref_name }}
          
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: push
    defaults:
      run:
        working-directory: configuration

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Deploy
        env:
          KEY: ${{ secrets.KEY }}
          HOST: ${{ secrets.HOST }}
          REGISTRY: ${{ secrets.REGISTRY }}
        run: |
          sudo apt update
          sudo apt install -y ansible
          
          echo "$KEY" > key.pem
          chmod 600 key.pem
          
          echo "repository: $REGISTRY" > secrets.yaml
          echo "tag: ${{ github.ref_name }}" >> secrets.yaml
          
          cat > inventory.yaml <<- EOF
          all:
            vars:
              ansible_user: admin
              ansible_ssh_private_key_file: key.pem
              ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
            hosts:
              api:
                ansible_host: "$HOST"
          EOF
          
          ansible-playbook -i inventory.yaml deploy.yaml

          rm key.pem inventory.yaml secrets.yaml
